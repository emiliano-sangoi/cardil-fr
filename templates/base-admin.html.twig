{% extends 'base.html.twig' %}

{% block title %}
    {{ page_title|default('Sin titulo') }}
{% endblock %}

{% block body %}

    <div id="wrapper">

        {% include 'sidebar.html.twig' %}

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                {% include 'topbar.html.twig' %}

                <!-- Begin Page Content -->
                <div class="container-fluid py-3 ml-md-2">

                    {% block main_content %}
                    {% endblock main_content %}

                </div>
                <!-- /.container-fluid -->

            </div>
            <!-- End of Main Content -->

{#            {% include 'footer.html.twig' %}#}


        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                    <a class="btn btn-primary" href="{{ path('app_logout') }}">Logout</a>
                </div>
            </div>
        </div>
    </div>



    {#    <script src="js/scripts.js"></script> #}
    {#    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js" crossorigin="anonymous"></script> #}
    {#    <script src="assets/demo/chart-area-demo.js"></script> #}
    {#    <script src="assets/demo/chart-bar-demo.js"></script> #}
    {#    <script src="https://cdn.jsdelivr.net/npm/simple-datatables@latest" crossorigin="anonymous"></script> #}
    {#    <script src="js/datatables-simple-demo.js"></script> #}

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>

        function coutFormatter(row, index) {
            if (row <= 0) {
                return '<span class="text-success font-weight-bold"> ' + row + '&nbsp;&euro;</span>';
            }else if (row > 0) {
                return '<span class="text-dark font-weight-bold">' + row + '&nbsp;&euro;</span>';
            }
        }

        function montantFormatter(row, index) {
            if (row < 0) {
                return '<span class="text-success font-weight-bold"> ' + row + '&nbsp;&euro;</span>';
            }else if (row > 0) {
                return '<span class="text-danger font-weight-bold">' + row + '&nbsp;&euro;</span>';
            }
        }

        function detailFormatter(index, row) {
            var html = []
            $.each(row, function (key, value) {
                if (typeof value == 'object') {
                    value = value.nom;
                }
                html.push('<p><b>' + key + ':</b> ' + value + '</p>')
            })
            return html.join('')
        }

        function etatFormatter(row, index) {
            if (row == 1) {
                return '<span class="text-success font-weight-bold"> ' + "{{ "Yes"|trans  }}" + '</span>';
            }
            return '<span class="text-muted font-weight-bold">' + "{{ "No"|trans  }}" + '</span>';
        }

        function headerStyle(column) {
            return { 'classes': 'bg-secondary font-weight-bold text-white' };
        }

        function loadLivCentersMarkers(map, centers, clickMarkerCallback) {

            let markers = [];

            const image = {
                url: "https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png",
                // This marker is 20 pixels wide by 32 pixels high.
                size: new google.maps.Size(40, 48),
                // The origin for this image is (0, 0).
                origin: new google.maps.Point(0, 0),
                // The anchor for this image is the base of the flagpole at (0, 32).
                anchor: new google.maps.Point(0, 48),
            };

            const image2 = {
                url: "https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png",
                // This marker is 20 pixels wide by 32 pixels high.
                size: new google.maps.Size(80, 74),
                // The origin for this image is (0, 0).
                origin: new google.maps.Point(0, 0),
                // The anchor for this image is the base of the flagpole at (0, 32).
                anchor: new google.maps.Point(0, 48),
            };

            const svgMarker = {
                path: "M10.453 14.016l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM12 2.016q2.906 0 4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 2.039-4.945t4.945-2.039z",
                fillColor: "#ff7a0a",
                fillOpacity: 0.9,
                strokeWeight: 1,
                rotation: 0,
                scale: 2,
                anchor: new google.maps.Point(15, 30),
            };


            const shape = {
                coords: [1, 1, 1, 20, 18, 20, 18, 1],
                type: "poly",
            };

            centers.forEach(function (item){
                console.log(item, idCurrentCenter);

                var markerOpt = {
                    position: { lat: item.latitude, lng: item.longitude },
                    map: map,
                    animation: google.maps.Animation.DROP,
                    icon: image,
                    shape: shape,
                    livCentre: item,
                    title: item.nom + " - {{ "form.livraison_centre.labels.cost" | trans }}: " + item.cout + ' €'
                };

                if(item.id == idCurrentCenter){
                    markerOpt.icon = svgMarker;
                }

                var marker = new google.maps.Marker(markerOpt);

                // map.addListener("center_changed", () => {
                //     // 3 seconds after the center of the map has changed, pan back to the
                //     // marker.
                //     window.setTimeout(() => {
                //         map.panTo(marker.getPosition());
                //     }, 3000);
                // });

                //marker.addListener("click", toggleBounce);
                marker.addListener("click", () => {
                    var position = marker.getPosition();
                    map.setZoom(9);
                    map.setCenter(position);

                    clickMarkerCallback(marker);

                });

                markers.push(marker);
            });



        }

        function toggleBounce() {
            if (marker.getAnimation() !== null) {
                marker.setAnimation(null);
            } else {
                marker.setAnimation(google.maps.Animation.BOUNCE);
            }
        }

    </script>

{% endblock %}


